{"ast":null,"code":"import _regeneratorRuntime from \"/home/r3zn0r/projects/personal/portfolio/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/r3zn0r/projects/personal/portfolio/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from \"axios\";\n\nvar getLatestRepos = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(data, token) {\n    var username, res, repos, latestSixRepos, _res, _repos, _latestSixRepos;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            username = data.githubUsername; // let token = `token ${process.env.GITHUB_AUTH_TOKEN}`;\n            // console.log(\"TOKEN\", token);\n\n            if (!token) {\n              _context.next = 11;\n              break;\n            }\n\n            _context.next = 5;\n            return axios.get(\"https://api.github.com/search/repositories?q=user:\".concat(username, \"+sort:author-date-asc\"), {\n              headers: {\n                Authorization: \"token \".concat(token)\n              }\n            });\n\n          case 5:\n            res = _context.sent;\n            repos = res.data.items;\n            latestSixRepos = repos.splice(0, 6); // console.log(\"LATEST 6 repos\", latestSixRepos);\n\n            return _context.abrupt(\"return\", latestSixRepos);\n\n          case 11:\n            _context.next = 13;\n            return axios.get(\"https://api.github.com/search/repositories?q=user:\".concat(username, \"+sort:author-date-asc\"));\n\n          case 13:\n            _res = _context.sent;\n            _repos = _res.data.items;\n            _latestSixRepos = _repos.splice(0, 6);\n            return _context.abrupt(\"return\", _latestSixRepos);\n\n          case 17:\n            _context.next = 22;\n            break;\n\n          case 19:\n            _context.prev = 19;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n\n          case 22:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 19]]);\n  }));\n\n  return function getLatestRepos(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport default getLatestRepos;","map":{"version":3,"sources":["/home/r3zn0r/projects/personal/portfolio/lib/getLatestRepos.js"],"names":["axios","getLatestRepos","data","token","username","githubUsername","get","headers","Authorization","res","repos","items","latestSixRepos","splice","console","log"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,IAAMC,cAAc;AAAA,sEAAG,iBAAOC,IAAP,EAAaC,KAAb;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAGbC,YAAAA,QAHa,GAGFF,IAAI,CAACG,cAHH,EAKnB;AACA;;AANmB,iBAQfF,KARe;AAAA;AAAA;AAAA;;AAAA;AAAA,mBASCH,KAAK,CAACM,GAAN,6DACqCF,QADrC,4BAEhB;AACEG,cAAAA,OAAO,EAAE;AACPC,gBAAAA,aAAa,kBAAWL,KAAX;AADN;AADX,aAFgB,CATD;;AAAA;AASXM,YAAAA,GATW;AAiBbC,YAAAA,KAjBa,GAiBLD,GAAG,CAACP,IAAJ,CAASS,KAjBJ;AAkBbC,YAAAA,cAlBa,GAkBIF,KAAK,CAACG,MAAN,CAAa,CAAb,EAAgB,CAAhB,CAlBJ,EAmBjB;;AAnBiB,6CAoBVD,cApBU;;AAAA;AAAA;AAAA,mBAsBCZ,KAAK,CAACM,GAAN,6DACqCF,QADrC,2BAtBD;;AAAA;AAsBXK,YAAAA,IAtBW;AAyBbC,YAAAA,MAzBa,GAyBLD,IAAG,CAACP,IAAJ,CAASS,KAzBJ;AA0BbC,YAAAA,eA1Ba,GA0BIF,MAAK,CAACG,MAAN,CAAa,CAAb,EAAgB,CAAhB,CA1BJ;AAAA,6CA2BVD,eA3BU;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AA8BnBE,YAAAA,OAAO,CAACC,GAAR;;AA9BmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAdd,cAAc;AAAA;AAAA;AAAA,GAApB;;AAkCA,eAAeA,cAAf","sourcesContent":["import axios from \"axios\";\n\nconst getLatestRepos = async (data, token) => {\n  // console.log(\"data\", data);\n  try {\n    const username = data.githubUsername;\n\n    // let token = `token ${process.env.GITHUB_AUTH_TOKEN}`;\n    // console.log(\"TOKEN\", token);\n\n    if (token) {\n      const res = await axios.get(\n        `https://api.github.com/search/repositories?q=user:${username}+sort:author-date-asc`,\n        {\n          headers: {\n            Authorization: `token ${token}`,\n          },\n        }\n      );\n      let repos = res.data.items;\n      let latestSixRepos = repos.splice(0, 6);\n      // console.log(\"LATEST 6 repos\", latestSixRepos);\n      return latestSixRepos;\n    } else {\n      const res = await axios.get(\n        `https://api.github.com/search/repositories?q=user:${username}+sort:author-date-asc`\n      );\n      let repos = res.data.items;\n      let latestSixRepos = repos.splice(0, 6);\n      return latestSixRepos;\n    }\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nexport default getLatestRepos;\n"]},"metadata":{},"sourceType":"module"}